disableLog("scan");
var list_servers = scan();
var i = 0;
profile = {};
profile["max_server"] = {
	"hostname": "n00dles"
	};

var max_ratio = 0;
while( i < list_servers.length ){
	var w_server = list_servers[i];
	if(w_server.includes("pserv-") || w_server.includes("home") || w_server.includes("darkweb")){
		i++;
		continue;
	}
	print("===============================");
	print("i ", i, " w_server: ", w_server);
	if(typeof w_server == "undefined"){
		i++;
		continue;
	};
	var tmp_list = scan(w_server);
	var required_hacking = getServerRequiredHackingLevel(w_server);
	var character_hacking = getPlayer().hacking;
	var min_security_level = getServerMinSecurityLevel(w_server);
	var max_money = getServerMaxMoney(w_server);
	var grow_rate = getServerGrowth(w_server);
	var money_max = getServerMaxMoney(w_server)
	var growth_amount = 2000000;
	if (max_money < growth_amount){
		growth_amount = 200000;
	}


	// how many hacks would it take to make  100000
	var hack_threads = Math.max(1, Math.floor(hackAnalyzeThreads(w_server, growth_amount)));


	var ratio = (max_money/min_security_level) * grow_rate / hack_threads / 1000000;

	print("ratio: ", ratio);
	profile[w_server] = {"min_security_level": min_security_level,
						"max_money": max_money,
						"ratio": ratio};
	if(ratio > max_ratio && character_hacking >= required_hacking && hasRootAccess(w_server)){
		max_ratio = ratio
		profile["max_server"] = {
			"hostname": w_server
			};
		;
		// hackAnalyzeThreads takes w_server and dollar ammount
		// var hack_threads = Math.max(hackAnalyzeThreads(w_server, growth_amount), 1);
		var hack_ana_security = hackAnalyzeSecurity(hack_threads);
		
		//the 1+ is because growth is a percent, need 1.percent not 0.percent
		var grow_threads = growthAnalyze(w_server, 1 + growth_amount / money_max);
		var grow_ana_security = growthAnalyzeSecurity(grow_threads);
		
		var total_security_gain = hack_ana_security + grow_ana_security;
		var weaken_threads = 1;

		var weaken_ana = weakenAnalyze(weaken_threads, 1);
			print("    Weaken thread generator:");
		while(weaken_ana < total_security_gain){
			print("        weaken security depletion: " + weaken_ana);
			weaken_threads++;
			weaken_ana = weakenAnalyze(weaken_threads, 1);
		}
		var p_hack_security = "hack security: " + hack_ana_security;
		print(p_hack_security);
		write(w_server + ".profile", p_hack_security + "\n\r", "w");	

		var p_grow_security = "grow security: " + grow_ana_security;
		print(p_grow_security);
		write(w_server + ".profile", p_grow_security + "\n\r", "a");	

		var p_weaken_threads = "weaken threads: " + weaken_threads;
		print(p_weaken_threads);
		write(w_server + ".profile", p_weaken_threads + "\n\r", "a");	

		var p_grow_threads = "grow threads: " + grow_threads;
		print(p_grow_threads);
		write(w_server + ".profile", p_grow_threads + "\n\r", "a");	

		var p_hack_threads = "hack threads: " + hack_threads;
		print(p_hack_threads);
		write(w_server + ".profile", p_hack_threads + "\n\r", "a");	

		
		var total_threads = grow_threads + weaken_threads + hack_threads;

		var p_server_threads = "server threads: " + (getServerMaxRam(w_server) - getServerUsedRam(w_server));
		print(p_server_threads);
		write(w_server + ".profile", p_server_threads + "\n\r", "a");	

		var p_total_threads = "total threads: " + total_threads;
		print(p_total_threads);
		write(w_server + ".profile", p_total_threads + "\n\r", "a");	

		
		var hack_ratio = hack_threads / total_threads;
		var grow_ratio = grow_threads / total_threads;
		var weaken_ratio = weaken_threads / total_threads;
		write(w_server + ".profile", "hack ratio: " + hack_ratio + "\n\r", "a");	
		write(w_server + ".profile", "grow ratio: " + grow_ratio + "\n\r", "a");	
		write(w_server + ".profile", "weaken ratio: " + weaken_ratio + "\n\r", "a");	

		write(w_server + ".profile", "min security level: " + min_security_level + "\n\r", "a");	


		print(profile["max_server"]);
		
		// write("current_best.txt", [profile["max_server"].hostname, hack_ratio, grow_ratio, weaken_ratio],"w")


	}

	for(var indx in tmp_list){
		if(!list_servers.includes(tmp_list[indx])){
			list_servers.push(tmp_list[indx]);
		}
	}
	i++;
}
if (profile["max_server"].hostname){
	print(profile["max_server"].hostname);

}
else{
	profile["max_server"] = {
						"hostname": "joesguns"};

}
print(profile["max_server"]);
clearPort(2);
writePort(2, profile["max_server"].hostname);
write("current_best.txt", [profile["max_server"].hostname, hack_ratio, grow_ratio, weaken_ratio],"w")